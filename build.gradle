buildscript {
    ext {
        springBootVersion = '1.3.5.RELEASE'
    }
    repositories {
        jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}



subprojects {
    apply plugin: 'spring-boot'
    apply plugin: 'application'
}

allprojects {
    apply plugin: 'java'
    apply plugin: 'eclipse'
    apply plugin: 'idea'

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    group 'io.hyperbuffer.samples.vertsockets'
    version '1.0.0'

    repositories {
        jcenter()
        mavenCentral()
    }

    test {
        useTestNG()

        // show standard out and standard error of the test JVM(s) on the console
        testLogging.showStandardStreams = true

        // set heap size for the test JVM(s)
        minHeapSize = "256m"
        maxHeapSize = "256m"

        // listen to events in the test execution lifecycle
        beforeTest { descriptor ->
            logger.lifecycle("Running test: $descriptor")
        }

        // listen to standard out and standard error of the test JVM(s)
        onOutput { descriptor, event ->
            logger.lifecycle("Test: $descriptor produced standard out/err: ${event.message}")
        }
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.13'
}
dependencies {
    final SLF4J_VERSION = '1.7.6'
    final LOGBACK_VERSION = '1.0.13'

    compile group: 'ch.qos.logback', name: 'logback-classic', version: LOGBACK_VERSION
    compile group: 'org.slf4j', name: 'slf4j-api', version: SLF4J_VERSION
    testCompile('org.testng:testng:6.9.10')
    testCompile('org.springframework.boot:spring-boot-starter-test:1.3.5.RELEASE')
}






eclipse {
    classpath {
        containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
        containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
    }
}
